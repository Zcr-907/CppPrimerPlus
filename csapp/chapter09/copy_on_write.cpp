/**
 * 在进程的虚拟内存地址中划分了2大板块[进程虚拟内存,内核虚拟内存]
 * 内核虚拟内存: 出了存有当前进程相关的数据,还保留了各个进程所共享的代码和数据
 *
 * 对于Linux:
 * 内存映射: 通过将一个虚拟内存区域与一个磁盘上的对象关联起来,以初始化这个虚拟内存区域的内容
 *          被映射的文件被划分成页大小的片,每个片都包含虚拟页面的初始化内容
 *          因为是按需调度,所以虚拟页面没有实际交换进物理内存,直播CPU第一次引用该页面(如果虚拟内存区域比文件区要大,就使用0来填充)
 * 共享文件: 文件所映射都不同进程的虚拟内存地址并不一样,但是通过各自虚拟内存地址所找到的物理内存地址是一致的
 * 私有文件: 一开始的时候2个进程将私有对象映射到自己的虚拟内存的不同区域,但是共享这个对象的同一个物理副本.
 *          但是每个对应的私有区域的页表条目都被标记为只读,这个区域的数据结构被标记为"私有的写时复制".
 *          当其中一个进程试图区写该对象时,就会触发"保护屏障",内核就在物理内存中创建这个页面的一个新副本,跟新PTE指向这个副本,然后恢复这个页面的可写权限
 *
 */

